install the 2 needed library by prisma (yarn add -D webpack@^5.0.0/yarn add -D prisma/ yarn add @prisma/client)
yarn add class-validator class-transformer
npx prisma init
add the var needed for the db in the schema.prisma file (model Name{})
change the .env $DATABASE name password and db 
prisma migrate dev(create the schema in the db)
//prisma studio
use @Body and Dto folder/file to get the asked class
app.useGlobalPipes(new ValidationPipe({whitelist: true,})); //create the class of data globaly to be use and set whitelist to accept only asked field
yarn add argon2
signup
//generate the password hash
//save user in the db throw error if needed
//return the user
signin
//check for the user email find unique throw error if needed
//check forargon verify the dto password and userdb hash 
//return user
package.json create script for migration to the database
//rm database with flags
//up database -d
//sleep 1
//npx prisma migrate deploy
yarn add @nestjs/config
add config module in the root module with call the forRoot({}),
and in prisma service we can use the configService to use directly the .env instead of hardcoding the DB URL
USE OF JWT:
yarn add @nestjs/passport passport
yarn add @nestjs/jwt passport-jwt
in the authmodule add in the import the jwtModule.register({}) and in the contructor of the authservice with the import
create the signToken fct and import the configService to define the secret of the jwt.signAsyc fct
add : Promise<T> at the end of the declaration field with T the type of the return 
create the strategy to intercept and action on the token send by the user agent
create the get method and the guard
yarn add -D pactum
create e2e test then create the test db and js package
yarn add -D dotenv-cli and modify package.json teste2e and deploy test and create a hook for  e2e test

for the teardown of the db :
-on each test we have to be carefull with the order of the delletion with prisma that why we need to use in the relation the option 'onDelete: cascade'
OR
-in the prisma service create a fct cleanDb() to delete what we need with this.$transaction([]) to be sure too conserve the order
